---
import { changeLanguage } from "i18next";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import HorizontalShopItem from "../../../components/HorizontalShopItem.astro";
import { getCollection } from "astro:content";
import { localizePath } from "astro-i18next";
import configAstro from "astro-i18next.config.mjs";

changeLanguage("es");

export async function getStaticPaths({ paginate }) {
    const items = await getCollection("project");
    items.sort((a, b) => b.data.updatedDate.valueOf() - a.data.updatedDate.valueOf());
    return paginate(items, { pageSize: 10 });
}
const { page } = Astro.props;
// The pathname of the current page, e.g. '/fr/'.
const { pathname } = Astro.url;
// The language (parent folder name) will be the second
// item if we split the path at every forward slash.
const lang = pathname.split("/")[1];
const nameClass = "project";
const otherLanguages = configAstro.locales.filter(function (l) { return l !== configAstro.defaultLocale; });
---

<BaseLayout title="Project" sideBarActiveItemID={nameClass}>
  <div class="mb-5">
    <div class="text-3xl w-full font-bold">Projects  </div>
  </div>
   list: {otherLanguages}
  path lang: {lang}
  <ul>
    {
      page.data
      .filter((item) => (
                          (item.data.language == lang) || 
                          (!(otherLanguages.includes(item.data.language)) && lang == nameClass)
                        )
      ).map((item) => (
        <>
          item lang: {item.data.language}
          <HorizontalShopItem
            title={item.data.title}
            img={item.data.heroImage}
            desc={item.data.description}
            pricing={item.data.pricing}
            oldPricing={item.data.oldPricing}
            checkoutUrl={item.data.checkoutUrl}
            badge={item.data.badge}
            details={item.data.details}
            tags={item.data.tags}
            url={localizePath(`/project/${item.slug}`)}
            custom_link={item.data.custom_link}
            custom_link_label={item.data.custom_link_label}
          />
          <div class="divider my-0" />
        </>
      ))
    }
  </ul>

  <div class="flex justify-between">
    {
      page.url.prev ? (
        <a href={page.url.prev} class="btn btn-ghost my-10 mx-5">
          {" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            <path d="M15.41,16.58L10.83,12L15.41,7.41L14,6L8,12L14,18L15.41,16.58Z" />
          </svg>{" "}
          Previous page
        </a>
      ) : (
        <div />
      )
    }
    {
      page.url.next ? (
        <a href={page.url.next} class="btn btn-ghost my-10 mx-5">
          Next page{" "}
          <svg
            class="h-6 w-6 fill-current md:h-8 md:w-8"
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
          >
            {" "}
            <path d="M8.59,16.58L13.17,12L8.59,7.41L10,6L16,12L10,18L8.59,16.58Z" />
          </svg>
        </a>
      ) : (
        <div />
      )
    }
  </div>
</BaseLayout>
