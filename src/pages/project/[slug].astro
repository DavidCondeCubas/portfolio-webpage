---
import { changeLanguage } from "i18next";
import { CollectionEntry, getCollection } from "astro:content";
import { ProjectSchema } from "../../config";
import ProjectItemLayout from "../../layouts/ProjectItemLayout.astro";
import i18next, { changeLanguage } from "i18next";
import configAstro from "astro-i18next.config.mjs";

changeLanguage("en");

export async function getStaticPaths() {
    const itemEntries = await getCollection("project");
    return itemEntries.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}
interface Props {
    entry: CollectionEntry<"project">;
}
const { entry } = Astro.props;
const item: ProjectSchema = entry.data;
const { Content } = await entry.render();
const currentLanguage = i18next.language;
const { pathname } = Astro.url;
const slugLanguage = pathname.split("_").slice(-1)[0];
if (currentLanguage != slugLanguage) {
    return Astro.redirect(currentLanguage != configAstro.defaultLocale ? `/${currentLanguage}/project` : "/project");
}
---
<ProjectItemLayout
  title={item.title}
  description={item.description}
  heroImage={item.heroImage}
  updatedDate={item.updatedDate}
  heroImage={item.heroImage}
  pricing={item.pricing}
  oldPricing={item.oldPricing}
  checkoutUrl={item.checkoutUrl}
  badge={item.badge}
  custom_link={item.custom_link}
  custom_link_label={item.custom_link_label}
>
  <Content />
</ProjectItemLayout>
